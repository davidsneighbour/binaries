#!/bin/bash

# description: build GoHugo website
# usage: ./bin/hugo/build [baseURL]

set -eo pipefail
IFS=$'\n\t'
CURPATH=$(pwd -P)

check_required_tools() {
  local missing_tools=()
  local tools=(hugo git npm)

  for tool in "${tools[@]}"; do
    if ! command -v "$tool" &>/dev/null; then
      missing_tools+=("$tool")
    fi
  done

  if [ ${#missing_tools[@]} -ne 0 ]; then
    echo "Missing required tools: ${missing_tools[*]}"
    exit 1
  fi
}

load_env_variables() {
  local env_file=".env"
  if [ -f "$env_file" ]; then
    set -a
    source "$env_file"
    set +a
  fi
}

check_modules() {
  local modules=("hugo-modules")
  local module_path
  for module in "${modules[@]}"; do
    module_path="../$module"
    if [ -d "$module_path" ]; then
      cd "$module_path"
      if [[ $(git diff --stat) != '' ]]; then
        echo "$module is dirty"
        exit 128
      fi
      cd - >/dev/null
    fi
  done
}

parse_arguments() {
  BASE_URL_PARAM=""
  if [ -n "$1" ]; then
    BASE_URL_PARAM="--baseURL=$1"
  fi
}

process_replacements() {
  local replacements_file="${CURPATH}/bin/etc/hugo/replacements"
  local replacements=""
  local not_first_line=false

  if [ -f "$replacements_file" ]; then
    while read -r -a line; do
      if $not_first_line; then
        replacements="$replacements,${line[0]} -> ${line[1]}"
      else
        replacements="${line[0]} -> ${line[1]}"
        not_first_line=true
      fi
    done <"$replacements_file"
    export HUGO_MODULE_REPLACEMENTS=$replacements
  fi
}

run_hugo() {
  npm run clean
  hugo mod get -u ./...

  env HUGO_MODULE_REPLACEMENTS="$HUGO_MODULE_REPLACEMENTS" \
    hugo \
    --logLevel "$LOGLEVEL" \
    --enableGitInfo \
    $BASE_URL_PARAM
}

main() {
  check_required_tools
  load_env_variables
  check_modules
  parse_arguments "$@"
  process_replacements
  run_hugo
}

main "$@"
